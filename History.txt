    1  apt-get update ; apt-get install git -y 
    2  git --version
    3  which  git 
    4  ls
    5  mkdir my_git_projects
    6  ls
    7  cd my_git_projects/
    8  ls
    9  git clone https://github.com/amitvashist7/devops-niit-20190808.git
   10  ls
   11  cd devops-niit-20190808/
   12  ls
   13  cat README.md 
   14  vi README.md 
   15  echo "Hello World" > Hello_World.txt
   16  ls -ltr 
   17  git add .
   18  git status 
   19  git log 
   20  git commit -m "Added Hello World"
   21  git config --global --edit
   22  vi /root/.gitconfig
   23  git log 
   24  git push 
   25  git log 
   26  git push 
   27  ls
   28  history 
   29  ls
   30  history 
   31  history > History.txt
   32  git add . ; git commit -m "History"; git push origin master 
   33  exit
   34  pwd
   35  ls
   36  cd my_git_projects/
   37  ls
   38  cd devops-niit-20190808/
   39  ls
   40  git log 
   41  ls
   42  echo "Apple Pie" | git hash-object 
   43  echo "Apple Pie" | git hash-object --stdin 
   44  echo "Amit Vashist" | git hash-object --stdin 
   45  echo "Apple Pie" | git hash-object --stdin 
   46  echo "Apple Pie" | git hash-object --stdin -w
   47  echo "Amit Vashist" | git hash-object --stdin -w
   48  ls
   49  ls -a
   50  ls
   51  cd .git/
   52  ls -ltr 
   53  cd objects/
   54  ls
   55  echo "Amit Vashist" | git hash-object --stdin -w
   56  echo "Apple Pie" | git hash-object --stdin -w
   57  ls
   58  cd c4/
   59  ls
   60  cd ..
   61  git cat-file c4/2fe628543c9f330ea51dea312d32cd72d7f454 -t 
   62  git cat-file c42fe628543c9f330ea51dea312d32cd72d7f454 -t 
   63  git cat-file c42fe628543c9f330ea51dea312d32cd72d7f454 -p
   64  git cat-file 23991897e13e47ed0adb91a0082c31c82fe0cbe5 -p
   65  cd ..
   66  ls
   67  cd ..
   68  ls
   69  git log 
   70  git HEAD
   71  ls
   72  cd .git/
   73  ls
   74  file HEAD   
   75  cat HEAD 
   76  cat refs/heads/master
   77  git log
   78  cd ..
   79  ls
   80  history > History.txt 
   81  git status 
   82  git add . ; git commit -m "Update History" 
   83  git log 
   84  cat .git/refs/heads/master
   85  git branch
   86  history 
   87  history > 1.txt
   88  cat 1.txt 
   89  ls
   90  rm  -rf 1.txt 
   91  ls
   92  git staus 
   93  git push 
   94  ls
   95  cd my_git_projects/
   96  ls
   97  cd devops-niit-20190808/
   98  ls
   99  ;s
  100  ls
  101  git rm Hello_World.txt
  102  ls
  103  git status 
  104  git commit -m "File has been removed"
  105  git status 
  106  echo "Welcome to GIT Demo" > Demo.txt
  107  git status 
  108  git add . 
  109  git status 
  110  git commit -m "New Demo file"
  111  git status 
  112  git push 
  113  ls
  114  vi README.md 
  115  git status 
  116  git checkout README.md
  117  git status 
  118  cat README.md 
  119  echo "Test - 02" >> README.md 
  120  cat README.md 
  121  ls
  122  cd my_git_projects/
  123  ls
  124  cd devops-niit-20190808/
  125  ls
  126  git branch
  127  git show HEAD
  128  git branch -r 
  129  ls
  130  git branch
  131  git branch dev
  132  git branch test
  133  git branch prod
  134  git branch
  135  ls
  136  cd dev
  137  git checkout dev
  138  git branch
  139  ls
  140  echo "Welcome to Dev Branch" > Dev.txt
  141  git add . 
  142  git commit -m "First Commit| Dev Branch"
  143  git log 
  144  git checkout master
  145  ls
  146  git log 
  147  git config --list 
  148  git push origin dev
  149  ls
  150  git checkout dev
  151  ls
  152  git logs 
  153  git log 
  154  git log --graph 
  155  git checkout master 
  156  git log --graph 
  157  ls
  158  echo "Hello To Master" > master.txt
  159  git add . ; git commit -m "Master Branch"; git push 
  160  git log --graph 
  161  ls
  162  git checkout test
  163  echo "Hello To Test" > test.txt
  164  git add . ; git commit -m "Test Branch"; git push origin test
  165  git checkout prod
  166  echo "Hello To Prod" > prod.txt
  167  git add . ; git commit -m "prod Branch"; git push origin prod
  168  git log 
  169  git log --graph
  170  git log --oneline --graph
  171  git checkout master 
  172  git log --oneline --graph
  173  git log --graph
  174  git checkout test
  175  git merge dev
  176  ls
  177  git log --graph
  178  git checkout prod
  179  git log --graph
  180  ls
  181  git merge test -m "Merge into Prod"
  182  git log --graph
  183  git checkout master 
  184  ls -ltr 
  185  git log --graph
  186  git merge prod -m "Merge into Prod"
  187  git log --graph
  188  ls
  189* git branch 
  190  git checkout prod
  191  ls
  192  echo "Just a test" >> prod.txt 
  193  git add . ; git commit -m "Just a test"; git push origin prod
  194  git log --graph
  195  git checkout master 
  196  git push 
  197  ls
  198  history > History.txt 
